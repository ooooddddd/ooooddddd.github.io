{
    "version": "https://jsonfeed.org/version/1",
    "title": "橙熟",
    "description": "我的笔记",
    "home_page_url": "https://ooooddddd.github.io",
    "items": [
        {
            "id": "https://ooooddddd.github.io/2023/10/12/RabbitMQ%E5%AD%A6%E4%B9%A0/",
            "url": "https://ooooddddd.github.io/2023/10/12/RabbitMQ%E5%AD%A6%E4%B9%A0/",
            "title": "RabbitMQ学习",
            "date_published": "2023-10-12T15:45:10.000Z",
            "content_html": "<h1 id=\"RabbitMQ\"><a href=\"#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><p>如图所示，运行docker镜像安装rabbitmq<img src=\"/self/imgs/RabbitMQ/1.png\"></p>\n</li>\n<li><p>报错提示：网络未找到<br><img src=\"/self/imgs/RabbitMQ/2.png\"></p>\n</li>\n<li><p>网络需要输入自己有的,之后运行命令，记得将用户名和密码设置为自己的</p>\n <pre class=\"language-Docker\" data-language=\"Docker\"><code class=\"language-Docker\">docker run -e RABBITMQ_DEFAULT_USER&#x3D;xxx -e RABBITMQ_DEFAULT_PASS&#x3D;xxxxx -v mq-plugins:&#x2F;plugins --name mq --hostname mq -p 15672:15672 -p 5672:5672 --network bridge -d rabbitmq:3.8-management&gt;</code></pre>\n\n</li>\n<li><p>如何访问<br><a href=\"http://192.168.110.92:15672/\">http://192.168.110.92:15672/</a></p>\n</li>\n<li><p>访问成功页面<img src=\"/self/imgs/RabbitMQ/3.png\"></p>\n</li>\n</ol>\n<h2 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h2><ol>\n<li>添加消息队列<img src=\"/self/imgs/RabbitMQ/4.png\"></li>\n<li>发送消息到交换机（exchanges），然后交换机需要binding消息队列，否则消息无法发送。<img src=\"/self/imgs/RabbitMQ/5.png\"></li>\n<li>总结：交换机没有存储消息的能力，只能转发消息</li>\n</ol>\n<h2 id=\"数据隔离\"><a href=\"#数据隔离\" class=\"headerlink\" title=\"数据隔离\"></a>数据隔离</h2><ol>\n<li>用户管理<img src=\"/self/imgs/RabbitMQ/6.png\"></li>\n<li>虚拟主机可以完成数据隔离，如何新建虚拟主机<img src=\"/self/imgs/RabbitMQ/7.png\"></li>\n<li>理论上讲，一个项目一个用户，一个虚拟主机</li>\n</ol>\n<h2 id=\"SpringAMQP-Java客户端\"><a href=\"#SpringAMQP-Java客户端\" class=\"headerlink\" title=\"SpringAMQP Java客户端\"></a>SpringAMQP Java客户端</h2><h3 id=\"如何收发消息\"><a href=\"#如何收发消息\" class=\"headerlink\" title=\"如何收发消息\"></a>如何收发消息</h3><ol>\n<li>引入 spring-boot-starter-amqp 依赖<img src=\"/self/imgs/RabbitMQ/8.png\"></li>\n<li>相关配置<img src=\"/self/imgs/RabbitMQ/9.png\"></li>\n<li>发消息，注入RabbitTemplate<img src=\"/self/imgs/RabbitMQ/10.png\"></li>\n<li>接收消息<img src=\"/self/imgs/RabbitMQ/11.png\"></li>\n</ol>\n<h3 id=\"WorkQueues模型\"><a href=\"#WorkQueues模型\" class=\"headerlink\" title=\"WorkQueues模型\"></a>WorkQueues模型</h3><ol>\n<li>让多个消费者绑定一个队列，共同消费一个队列中的消息<img src=\"/self/imgs/RabbitMQ/12.png\"></li>\n<li>循环发送消息<img src=\"/self/imgs/RabbitMQ/13.png\"></li>\n<li>同时接收消息，并模拟不同的处理速度<img src=\"/self/imgs/RabbitMQ/14.png\"></li>\n<li>设置prefetch，控制消费者预取的消息数量<img src=\"/self/imgs/RabbitMQ/15.png\"></li>\n<li>总结<img src=\"/self/imgs/RabbitMQ/16.png\"></li>\n</ol>\n<h3 id=\"Fanout交换机\"><a href=\"#Fanout交换机\" class=\"headerlink\" title=\"Fanout交换机\"></a>Fanout交换机</h3><ol>\n<li>Fanout 交换机会将接收到的消息广播到每一个跟其绑定的队列，所以也叫做广播模式。<blockquote>\n<p>1、一个交换机可以绑定多个队列 生产者发送的消息<br>2、只能发送到交换机<br>3、交换机把消息发送给绑定过的所有队列<br>4、订阅队列的消费者都能拿到消息</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"Direct交换机\"><a href=\"#Direct交换机\" class=\"headerlink\" title=\"Direct交换机\"></a>Direct交换机</h3><ol>\n<li><p>Direct Exchange 会将接收到的消息根据规则路由到指定的Queue，因此称为定向路由</p>\n<blockquote>\n<p> 1、每一个队列在bind交换机时都设置一个BindingKey<br> 2、发布者发送消息时，指定消息的RoutingKey<br> 3、exchange将消息路由到BindingKey与RoutingKey一致的队列<br> 4、如图所示<img src=\"/self/imgs/RabbitMQ/17.png\"></p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"Topic交换机\"><a href=\"#Topic交换机\" class=\"headerlink\" title=\"Topic交换机\"></a>Topic交换机</h3><ol>\n<li>Topic与Direct功能类似，但Topic在bindingkey时更加灵活，可以使用通配符。</li>\n<li>BindingKey一般是由一个或多个单词组成，以 . 分割。</li>\n<li>通配符规则：<blockquote>\n<p>#：匹配一个或多个单词<br>*：只匹配一个单词</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"声明队列和交换机\"><a href=\"#声明队列和交换机\" class=\"headerlink\" title=\"声明队列和交换机\"></a>声明队列和交换机</h3><ol>\n<li>基于注解的声明方式<br> <img src=\"/self/imgs/RabbitMQ/18.png\"></li>\n</ol>\n<h3 id=\"消息转化器\"><a href=\"#消息转化器\" class=\"headerlink\" title=\"消息转化器\"></a>消息转化器</h3><ol>\n<li>配置JSON转换器<br> a. 先引入依赖<br> <img src=\"/self/imgs/RabbitMQ/19.png\"><br>b. 配置消息转换器，在启动类添加Bean<br> <img src=\"/self/imgs/RabbitMQ/20.png\"><br> <img src=\"/self/imgs/RabbitMQ/21.png\"></li>\n<li>发送消息与接收消息时，消息类型必须一致<img src=\"/self/imgs/RabbitMQ/22.png\"><br><img src=\"/self/imgs/RabbitMQ/23.png\"></li>\n</ol>\n",
            "tags": [
                "RabbitMQ"
            ]
        },
        {
            "id": "https://ooooddddd.github.io/2023/10/08/test/",
            "url": "https://ooooddddd.github.io/2023/10/08/test/",
            "title": "test",
            "date_published": "2023-10-08T07:05:22.000Z",
            "content_html": "<h3 id=\"11111\"><a href=\"#11111\" class=\"headerlink\" title=\"11111\"></a>11111</h3><p><img src=\"https://img.miccai.top//imgs/1.png\"></p>\n",
            "tags": [
                "test"
            ]
        }
    ]
}